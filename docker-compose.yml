version: '3'

services:
  traefik:
    image: traefik:v2.1
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      # http
      - 80:80
      # https
      - 443:443
    volumes:
      # mount docker sock
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # transfer host localtime
      - /etc/localtime:/etc/localtime
      # mount traefik configuration yml file
      - ./data/traefik.yml:/etc/traefik/traefik.yml:ro
      # mound dynamic configuration
      - ./data/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml
      # mount acme.json for certificate storage
      - ./data/acme.json:/etc/traefik/acme/acme.json

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web,websecure"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)"

      # define auth and redirect middleware
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${CREDENTIALS}"
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.service=api@internal
  
      # global redirect to https  
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

networks:
  proxy:
    external: true
